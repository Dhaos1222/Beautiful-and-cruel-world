class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows==1)
            return s;
        string res;
        int n = s.length();
        int x = 0;
        int y = 0;
        int row = numRows;
        int col = n/2+1;
        string rest[numRows];
        rest[0] = s[0];
        for(int i = 0;i<n-1;i++)
        {
            if(i/(numRows-1)%2)
            {
                //x += 1;
                y -= 1;
            }
            else
            {
                y += 1;
            }
            rest[y] += s[i+1];
        }
        
        for(int i = 0;i<numRows;i++)
        {
            res += rest[i];
        }
        
        
        return res;
    }
};



class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows==1)
            return s;
        string aft;
        int n=s.size();
        for(int i=0;i<numRows;i++)
        {
            if(i==0)
            {
                for(int j=i;j<n;j+=2*numRows-2)
                    aft+=s[j];
            }
            else if(i==numRows-1)
            {
                for(int j=i;j<n;j+=2*numRows-2)
                    aft+=s[j];
            }
            else
            {
                int t=2*(numRows-1-i);
                for(int j=i;j<n;j+=2*numRows-2)
                {
                    aft+=s[j];
                    if((j+t)>=n)break;
                    aft+=s[j+t];
                }
            }
        }
        return aft;
    }
};