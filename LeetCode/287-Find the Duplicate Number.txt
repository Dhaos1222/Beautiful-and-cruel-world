class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int temp = INT_MAX;
        for(int i = 0;i<nums.size();i++)
        {
            if(temp==nums[i])
                return nums[i];
            temp = nums[i];
        }
        return 0;

    }
};

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int fast = 0,slow = 0;
        while(true)
        {
            fast = nums[nums[fast]];
            slow = nums[slow];
            if(fast == slow)
            {
                fast = 0;
                while(nums[slow]!=nums[fast])
                {
                    fast = nums[fast];
                    slow = nums[slow];
                }
                return nums[slow];
            }
        }
    }
};