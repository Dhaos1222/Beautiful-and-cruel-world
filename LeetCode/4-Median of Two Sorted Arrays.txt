class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int left_min,left_max,right_min,right_max;
        left_min = right_min = 0;
        left_max = nums1.size();
        right_max = nums2.size();
        vector<int>result;
        while(left_min<left_max&&right_min<right_max)
        {
            if(nums1[left_min]<nums2[right_min])
            {
                result.push_back(nums1[left_min++]);
            }
            else
            {
                result.push_back(nums2[right_min++]);
            }
        }
        while(left_min<left_max)
        {
            result.push_back(nums1[left_min++]);
        }
        while(right_min<right_max)
        {
            result.push_back(nums2[right_min++]);
        }
        int n = result.size();
        double res;
        if(n%2==1)
        {
            res = (double)result[n/2];
        }
        else
        {
            res = (double)(result[n/2]+result[n/2-1])/2;
        }
        return res;
    }
};